Settings:
  Output files: "/flush3/sam079/RNAseq-POMV/GenomeIndex/Bowtie/Salmon.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /OSM/CBR/AF_POMV/work/POMV_RNA_seq/Genomes/Salmo_salar/GCF_000233375.1_ICSASG_v2_genomic.fna
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:19
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:12
bmax according to bmaxDivN setting: 654721963
Using parameters --bmax 491041473 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 491041473 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:34
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:26
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:39
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.74127e+08 (target: 491041472)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (491041473) for bucket 1
Getting block 2 of 7
  Reserving size (491041473) for bucket 2
  Calculating Z arrays for bucket 1
Getting block 3 of 7
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 1:
Getting block 4 of 7
  Reserving size (491041473) for bucket 4
Getting block 5 of 7
  Reserving size (491041473) for bucket 5
Getting block 6 of 7
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 2:
  Reserving size (491041473) for bucket 6
  Reserving size (491041473) for bucket 3
  Calculating Z arrays for bucket 4
Getting block 7 of 7
  Reserving size (491041473) for bucket 7
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 6:
  bucket 7: 10%
  bucket 1: 10%
  bucket 2: 10%
  bucket 6: 10%
  bucket 5: 10%
  bucket 7: 20%
  bucket 1: 20%
  bucket 2: 20%
  bucket 3: 10%
  bucket 7: 30%
  bucket 4: 10%
  bucket 1: 30%
  bucket 6: 20%
  bucket 2: 30%
  bucket 5: 20%
  bucket 7: 40%
  bucket 1: 40%
  bucket 2: 40%
  bucket 7: 50%
  bucket 6: 30%
  bucket 3: 20%
  bucket 1: 50%
  bucket 5: 30%
  bucket 7: 60%
  bucket 2: 50%
  bucket 4: 20%
  bucket 1: 60%
  bucket 7: 70%
  bucket 6: 40%
  bucket 2: 60%
  bucket 1: 70%
  bucket 5: 40%
  bucket 7: 80%
  bucket 3: 30%
  bucket 2: 70%
  bucket 1: 80%
  bucket 7: 90%
  bucket 6: 50%
  bucket 5: 50%
  bucket 2: 80%
  bucket 4: 30%
  bucket 1: 90%
  bucket 7: 100%
  Sorting block of length 293821910 for bucket 7
  (Using difference cover)
  bucket 6: 60%
  bucket 2: 90%
  bucket 1: 100%
  Sorting block of length 423955361 for bucket 1
  (Using difference cover)
  bucket 3: 40%
  bucket 5: 60%
  bucket 2: 100%
  Sorting block of length 259115859 for bucket 2
  (Using difference cover)
  bucket 6: 70%
  bucket 4: 40%
  bucket 3: 50%
  bucket 5: 70%
  bucket 6: 80%
  bucket 3: 60%
  bucket 5: 80%
  bucket 4: 50%
  bucket 6: 90%
  bucket 3: 70%
  bucket 5: 90%
  bucket 6: 100%
  Sorting block of length 449392782 for bucket 6
  (Using difference cover)
  bucket 3: 80%
  bucket 4: 60%
  bucket 5: 100%
  Sorting block of length 319250080 for bucket 5
  (Using difference cover)
  bucket 3: 90%
  bucket 4: 70%
  bucket 3: 100%
  Sorting block of length 449570052 for bucket 3
  (Using difference cover)
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 423781803 for bucket 4
  (Using difference cover)
  Sorting block time: 00:04:49
Returning block of 259115860 for bucket 2
  Sorting block time: 00:05:45
Returning block of 293821911 for bucket 7
  Sorting block time: 00:05:57
Returning block of 319250081 for bucket 5
  Sorting block time: 00:07:47
Returning block of 423955362 for bucket 1
  Sorting block time: 00:07:36
Returning block of 423781804 for bucket 4
  Sorting block time: 00:08:02
Returning block of 449392783 for bucket 6
  Sorting block time: 00:08:13
Returning block of 449570053 for bucket 3
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 745696183
fchr[G]: 1310731207
fchr[T]: 1874410139
fchr[$]: 2618887853
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 917833628 bytes to primary EBWT file: /flush3/sam079/RNAseq-POMV/GenomeIndex/Bowtie/Salmon.1.bt2
Wrote 654721968 bytes to secondary EBWT file: /flush3/sam079/RNAseq-POMV/GenomeIndex/Bowtie/Salmon.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2618887853
    bwtLen: 2618887854
    sz: 654721964
    bwtSz: 654721964
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 163680491
    offsSz: 654721964
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 13640041
    numLines: 13640041
    ebwtTotLen: 872962624
    ebwtTotSz: 872962624
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:18:00
Reading reference sizes
  Time reading reference sizes: 00:00:14
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:12
  Time to reverse reference sequence: 00:00:02
bmax according to bmaxDivN setting: 654721963
Using parameters --bmax 491041473 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 491041473 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:32
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:24
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:40
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.27361e+08 (target: 491041472)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (491041473) for bucket 1
Getting block 2 of 8
  Reserving size (491041473) for bucket 2
Getting block 4 of 8
  Reserving size (491041473) for bucket 4
Getting block 3 of 8
  Reserving size (491041473) for bucket 3
  Calculating Z arrays for bucket 4
Getting block 6 of 8
  Reserving size (491041473) for bucket 6
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 4:
Getting block 5 of 8
  Reserving size (491041473) for bucket 5
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 2:
  Calculating Z arrays for bucket 3
Getting block 7 of 8
  Entering block accumulator loop for bucket 1:
  Entering block accumulator loop for bucket 3:
  Reserving size (491041473) for bucket 7
  Calculating Z arrays for bucket 5
Getting block 8 of 8
  Reserving size (491041473) for bucket 8
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 5:
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 8:
  Entering block accumulator loop for bucket 6:
  bucket 1: 10%
  bucket 2: 10%
  bucket 8: 10%
  bucket 3: 10%
  bucket 1: 20%
  bucket 7: 10%
  bucket 4: 10%
  bucket 5: 10%
  bucket 2: 20%
  bucket 1: 30%
  bucket 8: 20%
  bucket 6: 10%
  bucket 3: 20%
  bucket 2: 30%
  bucket 7: 20%
  bucket 1: 40%
  bucket 4: 20%
  bucket 5: 20%
  bucket 1: 50%
  bucket 8: 30%
  bucket 2: 40%
  bucket 3: 30%
  bucket 7: 30%
  bucket 1: 60%
  bucket 4: 30%
  bucket 2: 50%
  bucket 6: 20%
  bucket 8: 40%
  bucket 1: 70%
  bucket 5: 30%
  bucket 3: 40%
  bucket 2: 60%
  bucket 7: 40%
  bucket 1: 80%
  bucket 4: 40%
  bucket 8: 50%
  bucket 2: 70%
  bucket 1: 90%
  bucket 3: 50%
  bucket 5: 40%
  bucket 7: 50%
  bucket 6: 30%
  bucket 1: 100%
  Sorting block of length 146789394 for bucket 1
  (Using difference cover)
  bucket 8: 60%
  bucket 2: 80%
  bucket 4: 50%
  bucket 3: 60%
  bucket 2: 90%
  bucket 7: 60%
  bucket 5: 50%
  bucket 8: 70%
  bucket 3: 70%
  bucket 4: 60%
  bucket 2: 100%
  Sorting block of length 412166334 for bucket 2
  (Using difference cover)
  bucket 6: 40%
  bucket 8: 80%
  bucket 7: 70%
  bucket 3: 80%
  bucket 5: 60%
  bucket 4: 70%
  bucket 8: 90%
  bucket 3: 90%
  bucket 7: 80%
  bucket 6: 50%
  bucket 5: 70%
  bucket 8: 100%
  Sorting block of length 252661164 for bucket 8
  (Using difference cover)
  bucket 3: 100%
  Sorting block of length 431624214 for bucket 3
  (Using difference cover)
  bucket 4: 80%
  bucket 7: 90%
  bucket 5: 80%
  bucket 6: 60%
  bucket 4: 90%
  bucket 7: 100%
  Sorting block of length 290300334 for bucket 7
  (Using difference cover)
  bucket 5: 90%
  bucket 4: 100%
  Sorting block of length 475273646 for bucket 4
  (Using difference cover)
  bucket 6: 70%
  bucket 5: 100%
  Sorting block of length 262246320 for bucket 5
  (Using difference cover)
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 347826440 for bucket 6
  (Using difference cover)
  Sorting block time: 00:02:56
Returning block of 146789395 for bucket 1
  Sorting block time: 00:04:57
Returning block of 252661165 for bucket 8
  Sorting block time: 00:05:04
Returning block of 262246321 for bucket 5
  Sorting block time: 00:05:25
Returning block of 290300335 for bucket 7
  Sorting block time: 00:06:36
Returning block of 347826441 for bucket 6
  Sorting block time: 00:07:40
Returning block of 412166335 for bucket 2
  Sorting block time: 00:07:54
Returning block of 431624215 for bucket 3
  Sorting block time: 00:08:52
Returning block of 475273647 for bucket 4
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 745696183
fchr[G]: 1310731207
fchr[T]: 1874410139
fchr[$]: 2618887853
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 917833628 bytes to primary EBWT file: /flush3/sam079/RNAseq-POMV/GenomeIndex/Bowtie/Salmon.rev.1.bt2
Wrote 654721968 bytes to secondary EBWT file: /flush3/sam079/RNAseq-POMV/GenomeIndex/Bowtie/Salmon.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2618887853
    bwtLen: 2618887854
    sz: 654721964
    bwtSz: 654721964
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 163680491
    offsSz: 654721964
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 13640041
    numLines: 13640041
    ebwtTotLen: 872962624
    ebwtTotSz: 872962624
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:19:12
